/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */

// clean 시  - Gradle 로 선택함.
buildscript {
    ext {
        queryDslVersion = '5.0.0'
        mariadbClientVersion='2.7.4'
    }
}

plugins {
    id 'org.springframework.boot' version '2.6.1'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'   // 이거 있어야됌.
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    id 'java'
    id 'idea'
    id 'war'
}

group = 'com.example'
version = '1.0.0.1'
description = 'demoJsp'
sourceCompatibility = '11'

idea {
    module {
        sourceDirs += file('generated/')
        generatedSourceDirs += file('generated/')
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-json'

    implementation 'org.springframework.boot:spring-boot-autoconfigure'  // 이거 넣어줘야 spring boot class 출력
    implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
    implementation 'javax.servlet:jstl'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    testImplementation 'junit:junit:4.13.2'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation "org.mariadb.jdbc:mariadb-java-client:${mariadbClientVersion}"
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"

    compileOnly 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'
}

def querydslDir = "generated"

querydsl {
    library="com.querydsl:querydsl-apt"
    jpa = true
    //querydslDefault=true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', querydslDir]
        }
    }
}

configurations {
    querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    //options.generatedSourceOutputDirectory=file(querydslDir)
}


